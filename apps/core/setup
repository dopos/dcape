#!/bin/sh

# This script holds common tasks for dcape CI via drone
set -e

CMD=$1
shift
ARG=$1

CFG=.env

# do nothing if .env already exists
# load .env from enfist
# if does not exist - upload .env.sample
do_config() {
    if [ -f ${CFG} ] ; then
      echo "repo contains ${CFG} already, skip"
      return
    fi
    # config tag for enfist
    if [ -z "$ENFIST_TAG" ]; then
      export ENFIST_TAG=${DRONE_REPO_NAMESPACE}--${DRONE_REPO_NAME}--${DRONE_COMMIT_BRANCH}
    fi
    echo -n "Setup config for ${ENFIST_TAG}... "
    curl -gs http://enfist:8080/rpc/tag_vars?code=$ENFIST_TAG | jq -er '.' >> $CFG || {
	rm $CFG # here will be `null` if tag does not exists
	echo "WARNING: Config $ENFIST_TAG not found. Preparing $ENFIST_TAG.sample"
	[ -f ${CFG}.sample ] || make ${CFG}.sample
	jq -R -sc ". | {\"code\":\"$ENFIST_TAG.sample\",\"data\":.}" < ${CFG}.sample \
	    | curl -gsd @-  "http://enfist:8080/rpc/tag_set" | jq '.'
	echo "Edit config $ENFIST_TAG.sample and rename it to $ENFIST_TAG"
	exit 1
    }
    echo "Done"
}

# Prepare empty dir for application, path will be accessible as `$APP_ROOT`
# setup root keep - do not erase dir if exists
do_root() {
    export APP_ROOT=${DCAPE_ROOT:?Dcape root must be set}/apps/${ENFIST_TAG}
    echo -n "Setup app root: $APP_ROOT... "
    if [ -d ${APP_ROOT} ] && [ -z "$ARG" ]; then
      echo -n "Remove.. "
      rm -rf $APP_ROOT
    fi
    if [ ! -d ${APP_ROOT} ]; then
      echo -n "Create.. "
      mkdir -p $APP_ROOT
    fi
    echo "Done"
}

case $CMD in
    config)
	    do_config
	    ;;
    root)
	    do_root
	    ;;
    *)
	    echo "Unsupported command: $CMD"
	    exit 1
	    ;;
esac
