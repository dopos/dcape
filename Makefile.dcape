# dcape application Makefile
# included by dcape app inside dcapr

SHELL             = /bin/bash
DC_INC = docker-compose.inc.yml

mkfile_path := $(shell dirname $(abspath $(lastword $(MAKEFILE_LIST))))
include $(mkfile_path)/Makefile.common

.PHONY: env

# TODO
env: .env.sample $(DC_ENV_SOURCES)
	@echo "*** $@ ***"
	#@cp $(CFG).sample $(CFG)
	@mv $(CFG).sample $(CFG)
	@for f in $^ ; do [[ $$f == $(CFG).sample ]] || cat $$f >> $(CFG) ; done

# build file from app templates
docker-compose.yml: $(DC_INC) $(DC_SOURCES)
	@echo "*** $@ ***"
	@echo "# WARNING! This file was generated by make. DO NOT EDIT" > $@
	@for f in $^ ; do cat $$f >> $@ ; done

ps: CMD=ps
ps: dc

## (re)start container(s)
up: CMD=up -d $(APPS)
up: dc

up-%:
	@echo "*** $@ ***" ; \
	x=$@ ; \
	$(MAKE) -s up APPS=$${x#up-}

reup-%:
	@echo "*** $@ ***" ; \
	x=$@ ; \
	$(MAKE) -s reup APPS=$${x#reup-}

## restart container(s)
reup: CMD=up --force-recreate -d $(APPS)
reup: dc


dc: $(ENV) docker-compose.yml
	@>&2 echo "Running dc command: $(CMD)"
	@>&2 echo "Dcape URL: $(DCAPE_SCHEME)://$(DCAPE_HOST)"
	@>&2 echo "------------------------------------------"
	docker compose -p $$DCAPE_TAG --project-directory $(DCAPE_ROOT) $(CMD)

## run git on every app
## sample: make git-status-s
git-%:
	@echo "*** $@ ***" ; \
	x=$@ ; cmdd=$${x#git-} ; cmd=$${cmdd/-/ -} ; \
	for app in $(APPS); do \
	  echo "Run '$$cmd' in $$app..."; \
	  pushd apps/_$$app > /dev/null ; \
	    git $$cmd ; \
	  popd > /dev/null ; \
	done

## create database and user
db-create: docker-wait
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_PASS && pass=$${!varname} \
	&& varname=$(NAME)_DB_TAG && dbname=$${!varname} \
	&& echo "Create db $$dbname..." ; \
	$(MAKE) -s .lib-db-create PGUSER=$$dbname PGDATABASE=$$dbname PGPASSWORD=$$pass

## drop database and user
db-drop:
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_TAG && dbname=$${!varname}  \
	&& echo "Drop db ($$NAME) $$dbname..." ; \
	$(MAKE) -s .lib-db-drop PGUSER=$$dbname PGDATABASE=$$dbname
