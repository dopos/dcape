# dcape application Makefile
# included by dcape app inside dcapr

SHELL  = /bin/bash
DC_INC = docker-compose.inc.yml

mkfile_path := $(shell dirname $(abspath $(lastword $(MAKEFILE_LIST))))
-include $(mkfile_path)/.dcape.env
include $(mkfile_path)/Makefile.common

## create database and user
db-create: docker-wait
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_PASS && pass=$${!varname} \
	&& varname=$(NAME)_DB_TAG && dbname=$${!varname} \
	&& echo "Create db $$dbname..." ; \
	$(MAKE) -s .lib-db-create PGUSER=$$dbname PGDATABASE=$$dbname PGPASSWORD=$$pass

## drop database and user
db-drop:
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_TAG && dbname=$${!varname}  \
	&& echo "Drop db ($$NAME) $$dbname..." ; \
	$(MAKE) -s .lib-db-drop PGUSER=$$dbname PGDATABASE=$$dbname

## exec psql inside db container
psql: docker-wait
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_TAG && dbname=$${!varname}  \
	@docker compose exec -T db psql -d $$dbname -U $$dbname

## drop database and user
psql-local:
	@echo "*** $@ ***" \
	&& varname=$${NAME:?Must be set}_DB_PASS && pass=$${!varname} \
	&& varname=$${NAME:?Must be set}_DB_TAG && dbname=$${!varname}  \
	$(MAKE) -s .lib-db-psql PGUSER=$$dbname PGDATABASE=$$dbname PGPASSWORD=$$pass

# called in app Makefile to run dcape stack commands
compose:
	@docker compose -p $(DCAPE_TAG) --project-directory $(DCAPE_ROOT) $(CMD)

# may be used in app Makefile, called before app up
.setup-before-up:

# may be used in app Makefile, called after app up
.setup-after-up:
